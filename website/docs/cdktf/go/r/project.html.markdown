---
layout: "tfe"
page_title: "Terraform Enterprise: tfe_project"
description: |-
Manages projects.
---


<!-- Please do not edit this file, it is generated. -->
# tfe_project

Provides a project resource.

## Example Usage

Basic usage:

```go
import constructs "github.com/aws/constructs-go/constructs"
import "github.com/hashicorp/terraform-cdk-go/cdktf"
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import "github.com/aws-samples/dummy/gen/providers/tfe/organization"
import "github.com/aws-samples/dummy/gen/providers/tfe/project"
type myConvertedCode struct {
	terraformStack
}

func newMyConvertedCode(scope construct, name *string) *myConvertedCode {
	this := &myConvertedCode{}
	cdktf.NewTerraformStack_Override(this, scope, name)
	tfeOrganizationTestOrganization := organization.NewOrganization(this, jsii.String("test-organization"), &organizationConfig{
		email: jsii.String("admin@company.com"),
		name: jsii.String("my-org-name"),
	})
	project.NewProject(this, jsii.String("test"), &projectConfig{
		name: jsii.String("projectname"),
		organization: cdktf.Token_AsString(tfeOrganizationTestOrganization.name),
	})
	return this
}
```

## Argument Reference

The following arguments are supported:

* `Name` - (Required) Name of the project.
* `Organization` - (Optional) Name of the organization. If omitted, organization must be defined in the provider config.
* `Description` - (Optional) A description for the project.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `Id` - The project ID.

## Import

Projects can be imported; use `<PROJECT ID>` as the import ID. For example:

```shell
terraform import tfe_project.test prj-niVoeESBXT8ZREhr
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d1a8b41fe35391c9fd6740eabcec5228cdddbfa3c037fb2be0c0609646975e70 -->