name: CI Tests
on:
  push:
    branches: [ main ]
  pull_request:
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go Environment
        uses: actions/setup-go@v3
        with:
          go-version-file: "go.mod"

      - name: fmt check
        run: make fmtcheck

      - name: go vet
        run: make vet

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.50.0
          args: "--out-${NO_FUTURE}format colored-line-number"
          skip-pkg-cache: true

  tests:
    name: run
    runs-on: ubuntu-latest
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        # If you adjust these parameters, also adjust the jrm input files on the "Merge reports" step below
        parallel: [ 5 ]
        index: [ 0, 1, 2, 3, 4 ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true

      - name: Sync dependencies
        run: |
          go mod download
          go mod tidy

      - name: Install gotestsum
        run: go install gotest.tools/gotestsum@latest

      - name: Download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow_conclusion: success
          name: junit-test-summary
          if_no_artifact_found: warn
          # branch: main

      - name: Split acceptance tests
        id: test_split
        uses: hashicorp-forge/go-test-split-action@v1
        with:
          index: ${{ matrix.index }}
          total: ${{ matrix.parallel }}
          junit-summary: ./ci-summary-provider.xml

      - name: Fetch Outputs
        id: tflocal
        uses: brandonc/terraform-cloud-outputs-action@v1
        with:
          token: "${{ secrets.TF_WORKFLOW_TFLOCAL_CLOUD_TFC_TOKEN }}"
          organization: hashicorp-v2
          workspace: tflocal-terraform-provider-tfe

      - name: Run Tests
        env:
          TFE_HOSTNAME: ${{ fromJSON(steps.tflocal.outputs.workspace-outputs-json).ngrok_domain }}
          TFE_TOKEN: ${{ fromJSON(steps.tflocal.outputs.workspace-outputs-json).tfe_token }}
          TFE_USER1: tfe-provider-user1
          TFE_USER2: tfe-provider-user2
          TF_ACC: 1
          TFC_RUN_TASK_URL: "https://httpstat.us/200"
          GITHUB_POLICY_SET_IDENTIFIER: "hashicorp/test-policy-set"
          GITHUB_REGISTRY_MODULE_IDENTIFIER: "hashicorp/terraform-random-module"
          GITHUB_WORKSPACE_IDENTIFIER: "hashicorp/terraform-random-1"
          GITHUB_WORKSPACE_BRANCH: "test"
          GITHUB_TOKEN: "${{ secrets.TESTING_GITHUB_TOKEN }}"
          MOD_PROVIDER: github.com/hashicorp/terraform-provider-tfe
          MOD_TFE: github.com/hashicorp/terraform-provider-tfe/tfe
          MOD_VERSION: github.com/hashicorp/terraform-provider-tfe/version
        run: |
          gotestsum --junitfile summary.xml --format short-verbose -- $MOD_PROVIDER $MOD_TFE $MOD_VERSION -v -timeout=30m -run "${{ steps.test_split.outputs.run }}"

      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        with:
          name: junit-test-summary-${{ matrix.index }}
          path: summary.xml
          retention-days: 1

  tests-combine-summaries:
    name: Combine Test Reports
    needs: [ tests ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Install junit-report-merger
        run: npm install -g junit-report-merger

      - name: Merge reports
        run: jrm ./ci-summary-provider.xml "junit-test-summary-0/*.xml" "junit-test-summary-1/*.xml" "junit-test-summary-2/*.xml" "junit-test-summary-3/*.xml" "junit-test-summary-4/*.xml"

      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        with:
          name: junit-test-summary
          path: ./ci-summary-provider.xml

  tests-summarize:
    name: Summarize Tests
    needs: [ tests ]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Check tests Status
        run: |
          if [ "${{ needs.tests.result }}" = "success" ]; then
            exit 0
          fi
          exit 1
